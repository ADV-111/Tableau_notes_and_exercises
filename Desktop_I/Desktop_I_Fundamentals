{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "# Learning Objectives\n",
    "* Connect to your data and edit a data source\n",
    "* Edit metadata and group fields\n",
    "* Sort and filter data\n",
    "* Use the Desktop workspace to create visualizations\n",
    "* Build essential chart types\n",
    "* Create basic calculations, including arithmetic calculations, customer aggregations and ratios; and use quick table calculations\n",
    "* Build interactive dashboards and stories to reveal data insights\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Editing and Saving a Data Source\n",
    "## Make changes to a data source for sharing and reuse\n",
    "\n",
    "Useful takeaways\n",
    "* organise data fields into folders\n",
    "* save data source connection into Data -> My Data -> Add To Saved Data Sources\n",
    "\n",
    "## Updating the View with New Data\n",
    "\n",
    "Useful takeaways\n",
    "* Replace reference if data field source has been changed. Click on the data field and look for Replace Reference\n",
    "\n",
    "## Change and Save a Data Source\n",
    "Useful takeaways\n",
    "Saved data sources save:\n",
    "* Data connection information\n",
    "* Metadata edits\n",
    "* Calculated fields\n",
    "THEY DON'T SAVE:\n",
    "* Data extract\n",
    "* Vizzes"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Filtering Your Data\n",
    "## Creating Filters on your data\n",
    "## Changing Filter Options\n",
    "## Using Date Filters\n",
    "## Create and Customise Filters"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Sorting Your Data\n",
    "Data doesn't always sort itself into neat rows. This lesson will focus on how to organize your data to do just that.\n",
    "Learn how to sort data automatically or manually, as well as how to arrange your data by sorting on a field that is not in the view.\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Concept: Sorting Your Data to Find Answers\n",
    "At the end of this lesson, you will be able to:\n",
    "* define and contrast computed sort and manual sort.\n",
    "* give examples of when to use computed sort\n",
    "* give examples of when to use manual sort\n",
    "\n",
    "\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Using Computed and Manual Sorts\n",
    "At the end of this lesson you will be able to:\n",
    "* describe how to perfomr a computed sort using the axis, the toolbar, and by sorting on the field\n",
    "* Describe how to perform a manual sort by dragging and dropping headers/ labels\n",
    "\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Sort by Fields in a View\n",
    "activity with downloaded tableau worksheet\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Sort by Fields not in a view"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Creating Groups in Your Data\n",
    "groups can be created in three ways:\n",
    "* from the dimension shelf\n",
    "* by selecting the labels in the view\n",
    "* by selecting marks in the view to create ad hoc analysis\n",
    "\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Create a Group - exercise\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Create Visual Groups - exercise\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Creating Hierarchies in Your Data\n",
    "Many dimensions have a relationship to each other. Organizing your dimensions in a hierarchy can help you\n",
    "analyze your data. Learn how to create and edit hierarchies to organize dimensions into multi-level categories.\n",
    "Learn how to use the hierarchy to access the level of detail you need\n",
    "\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Working with Date Fields: Discrete and Continuous Time\n",
    "Take control of time. Learn about the difference between date parts and date values, and how to use\n",
    "dates as discrete and continuous fields. Use date fields to show data across time or aggregated into\n",
    "categories, at varied levels of detail\n",
    "\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Working with Date Fields: Discrete and Continuous Time\n",
    "\n",
    "## Working with Dates\n",
    "* identify and describe characterisitcs of date and date/time fields\n",
    "* describe the difference between date parts and date values\n",
    "\n",
    "## Discrete and Continuous Fields\n",
    "identify continuous and discrete fields and how they affect your visualizations\n",
    "\n",
    "## Changing Date Fields into Discrete or Continuous Fields\n",
    "Convert dates form discrete to continuous and form continuous to discrete\n",
    "\n",
    "## Using Discrete and Continuous Date Fields\n",
    "Use date parts and date ranges to change views of your data\n",
    "\n",
    "## Show Data Across Discrete and Continuous Months\n",
    "Compare the difference between discrete nad continuous dates"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Working with Date Fields: Custom Dates\n",
    "Make date fields behave exactly the you want, every time! Learn how to use custom dates to simplify\n",
    "a time series analysis that you find yourself doing frequently. Create custom dates that are automatically drilled down\n",
    "to the continuous date value you want. Or, use custom dates that deliver only the discrete\n",
    "date part you were looking for. Build a hierarchy from the custom dates to control what happens\n",
    "when users drill up or down.\n",
    "\n",
    "## Apply Custom Dates - exercise"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Working with Multiple Measures: Dual Axis and Combo Charts\n",
    "the ability to compare measures with each other is important to any analysis. Tableau makes it easy\n",
    "to do this through the use of different chart types. Learn the difference between a dual axis chart and a combo chart to\n",
    "compare and contrast two marks. Use multiple mark types to distinguish them.\n",
    "## Building Dual Axis and Combo Charts\n",
    "## Build a Combo Chart - exercise\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Working with Multiple Measures: Combined Axis Charts\n",
    "Neet to see multiple measures at the same scale? Use Measure Names and Measure Values to show\n",
    "multiple measures on the same axis. Learn how to create a combined axis chart that uses stacked marks.\n",
    "## Building a Combined Axis Chart\n",
    "Use multiple measures on the same axis\n",
    "## Build a Combined Axis Chart - exercise\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Showing Relationships between Numerical Values\n",
    "Discover the relationship between two numeric fields. Visualize that connection as a scatterplot\n",
    "and analyze the correlation between the two measures\n",
    "## Build a scatter plot - exercise\n",
    "Create and customize a scatter plot\n",
    "\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Mapping Data Geographically\n",
    "if you have geographic data, map it! Use Tableau's automatic geographic role detection to plot data\n",
    "across cities, states, and nations. Create a symbol map to plot data across regions.\n",
    "\n",
    "## Mapping Your Data\n",
    "Work with geographic data and geocoding\n",
    "\n",
    "## Creating a Symbol Map\n",
    "Show distributed geographic data on a map\n",
    "## Build a Symbol Map - exercise\n",
    "use a symbol map to show market data\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Using Crosstabs: Totals and Aggregation\n",
    "\n",
    "## Creating and Editing Crosstabs\n",
    "\n",
    "## Working with Totals and Aggregation\n",
    "Apply totals and subtotals to crosstabs\n",
    "\n",
    "## Show Sales Totals in a Crosstab - add totals and subtotals - exercise\n",
    "## Create a Weighted Average\n",
    "add a weighted average to a crosstab\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Using Crosstabs: Highlight Tables\n",
    "Put a spotlight on outliers. Create a highlight table using a crosstab and color encoding\n",
    "to make outliers visually stand out\n",
    "## Build a Highlight Table\n",
    "Use a highlight table to show trends\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Using Crosstabs: Heat Maps\n",
    "Seeing your measures visually through size and color can help give your data a focal point.\n",
    "Show these numeric values across multiple related dimensions to derive additional insight. In this\n",
    "module, you will learn how heat maps compare these measures to break down your data\n",
    "and show outliers within your dimension comparisons\n",
    "## Creating Heat Maps\n",
    "Use size and color to compare multiple measures and dimensions\n",
    "## Build a Heat Map\n",
    "Analyze category sales using a heat map\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Customize Your Data\n",
    "data customization helps you to create fields that you dream of. Use formulas, functions,\n",
    "fields, within your data, and more to create your own calculations. Learn about the calculation\n",
    "editor and how to use it to add fields that your data set is missing.\n",
    "## Using Calculated Fields\n",
    "## Exploring the Calculation Editor\n",
    "Learn how to create calculated fields\n",
    "\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Using Calculations: Working with Strings, Dates, and Type Conversion Functions\n",
    "Do you need your dates to be specific to an analysis you're creating? Create calculations using\n",
    "string data fields and date fields. Combine string data, and use type conversion functions to convert a data type.\n",
    "Use date functions to create date-specific calculations that determine spans of time.\n",
    "\n",
    "## Working with String Calculations\n",
    "Combine strings and convert the data type\n",
    "\n",
    "## Manipulate Strings and Convert the Data Type - exercise\n",
    "Use a string function and perform a data conversion\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Using Date Specific Calculations\n",
    "Create a cacluated field using date data\n",
    "\n",
    "## Create a Date Calculation - exercise\n",
    "Calculate the number of days between start and end dates"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Using Calculations: Working with Aggregations\n",
    "HOw does Tableau aggregate data in calculations? Lear best practices to control how Tableau\n",
    "aggregate your data. Use a calculated field to predetermine the order of operation for\n",
    "the aggregation. Investigate the different results between aggregation performed at the row\n",
    "level and aggregation performed within your calculation\n",
    "## How Calculations Work with Aggregation\n",
    "Examine how calculations can affect aggregation\n",
    "\n",
    "## Building Calculations with Aggregations\n",
    "Control the level of aggregation in calculations\n",
    "\n",
    "## Create a Calculation with Aggregation - exercise\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Using Quick Table Calculations to Analyze Data\n",
    "Uncertain which calculation to use? Leverage the power of Tableau's built-in table calculations to dive deeper into your\n",
    "data. Learn how Tableau applies quick table calculations to a view, discover the default calculations available, and control results using scope and direction options.\n",
    "Apply calculations such as Running Total, Percent of Total, Rank and Year over Year\n",
    "\n",
    "## Applying Quick Table Calculations\n",
    "Create calculations with the data in the view\n",
    "\n",
    "## Using Running Total and Percent of Total\n",
    "Apply quick table calculations to a view\n",
    "\n",
    "## Leveraging Rank Calculations\n",
    "Use a Rank calculation to compare and sequence dimensions\n",
    "\n",
    "## Apply a Year Over Year Table Calculation\n",
    "Show year over year change within a view\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Showing Breakdowns of the Whole\n",
    "Seeing parts of the whole helps you understand the overall picture. Learn about when to use pie charts (they're not all bad)\n",
    "and create a tree map to show a breakdown of multiple categories\n",
    "\n",
    "## Making Effective Pie Charts\n",
    "Pick the right data for your pie chart\n",
    "\n",
    "## Showing Hierarchy with Tree Maps\n",
    "Display relative values with tree maps and other chart types\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Highlighting Data with Reference Lines\n",
    "Show whether data has met its mark. Create and label reference lines to show targets, averages, and more. Use instant\n",
    "analytics to compare subsets against the rest\n",
    "\n",
    "## Using Reference Lines and Bands\n",
    "Explore options for highlighting data\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Create a Dashboard: Combining Your Views\n",
    "It's time to show off your data in a dashboard! Combine views and use quick filters, highlight actions, and more to create\n",
    "an interactive dashboard designed to guide someone through their analysis\n",
    "## Introduction to Dashboards\n",
    "Combine views to present your analysis\n",
    "## Building a Dashboard\n",
    "## Adding Interactivity to Dashboards\n",
    "\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Create a Dashboard: Add Actions for Interactivity\n",
    "Involve your audience in the dashboard experience through interactivity. Create dashboard actions to enable users to highlight\n",
    "data in the view, filter out data, or connect to a file or web-based resources for more information about data. Select\n",
    "a preferred way to run each action.\n",
    "\n",
    "## Using More Actions in Dashboards\n",
    "Discover highlight, filter and URL actions\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "# Sharing Your Work\n",
    "You're ready for others to see your work! Invesigate the contents of the main Tableau file types, and deteremine the\n",
    "purpose of each. Explore ways to share your work using Tableau Server or Tableau Online and as a packaged workbook (for\n",
    "those with Tableau Desktop or Tableau Reader). Share views and dashboards as an image or export the data from a view.\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}